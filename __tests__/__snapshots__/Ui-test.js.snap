// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <RNSpinkit
      color="#cc3434"
      size={50}
      style={
        Array [
          Object {
            "height": 50,
            "width": 50,
          },
          undefined,
        ]
      }
      type="ThreeBounce"
    />
  </View>
</View>
`;

exports[`renders correctly 2`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 60,
        "justifyContent": "flex-end",
        "position": "absolute",
        "right": 12,
        "top": 0,
        "width": 240,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ddd",
              "borderRadius": 4,
              "height": 28,
              "justifyContent": "center",
              "marginLeft": 10,
              "marginTop": 28,
              "width": 48,
            },
            Object {
              "backgroundColor": "#cc3434",
            },
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#333",
              "fontSize": 14,
              "fontWeight": "100",
            },
            Object {
              "color": "#fff",
            },
          ]
        }
      >
        日期
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ddd",
              "borderRadius": 4,
              "height": 28,
              "justifyContent": "center",
              "marginLeft": 10,
              "marginTop": 28,
              "width": 48,
            },
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#333",
              "fontSize": 14,
              "fontWeight": "100",
            },
            false,
          ]
        }
      >
        观看
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ddd",
              "borderRadius": 4,
              "height": 28,
              "justifyContent": "center",
              "marginLeft": 10,
              "marginTop": 28,
              "width": 48,
            },
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#333",
              "fontSize": 14,
              "fontWeight": "100",
            },
            false,
          ]
        }
      >
        喜欢
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "marginTop": 80,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <RNSpinkit
        color="#cc3434"
        size={50}
        style={
          Array [
            Object {
              "height": 50,
              "width": 50,
            },
            undefined,
          ]
        }
        type="ThreeBounce"
      />
    </View>
  </View>
</View>
`;

exports[`renders correctly 3`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "marginTop": 80,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <RNSpinkit
        color="#cc3434"
        size={50}
        style={
          Array [
            Object {
              "height": 50,
              "width": 50,
            },
            undefined,
          ]
        }
        type="ThreeBounce"
      />
    </View>
  </View>
</View>
`;

exports[`renders correctly 4`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <RNSpinkit
      color="#cc3434"
      size={50}
      style={
        Array [
          Object {
            "height": 50,
            "width": 50,
          },
          undefined,
        ]
      }
      type="ThreeBounce"
    />
  </View>
</View>
`;
